{"version":3,"sources":["../../src/fields.tsx","../../src/index.tsx","App.js","index.js"],"names":["field_params","params","required","text_field","type","validation","s","default","getDefaultOfType","getDataFromSchemaAndDefault","schema","a","defaultValue","value","error","_","Object","children","Array","nChildrenToAdd","i","childrenSchema","readOnly","max","min","generateDataFromSchema","formSchema","initData","useState","formData","setFormData","modified","setModified","events","setEvents","recursiveUpdateError","data","recursiveErrorCheck","_data","isValid","recursiveToJSON","key","callEvents","eventName","event","checkErrors","get","name","path","recursiveGet","pathHistory","parent","length","map","func","updateFunction","_i","canBeRemoved","remove","console","toJSON","set","canPush","push","item","newField","canRemove","setValue","_v","_path","index","parseInt","c","handleSubmit","e","addEventListener","callback","removeEventListener","styled","textarea","StyledInput","input","StyledButton","button","Container","div","Input","props","style","borderColor","onChange","target","movies","date","tags","App","form","useForm","useEffect","log","display","flexDirection","height","flex","overflowY","movie","margin","background","padding","tag","onClick","backgroundColor","boxShadow","alignItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84aa52f4.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\r\n/* eslint-disable camelcase */\r\n\r\ntype FieldParam = {\r\n\trequired?: boolean\r\n\tdefault?: any\r\n\tvalidation?: (value: any) => boolean\r\n}\r\n\r\n// Source: https://emailregex.com/\r\nconst VALIDATION_MAIL = (s: string) =>\r\n\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n\t\ts\r\n\t)\r\n\r\n// Source: https://stackoverflow.com/questions/38483885/regex-for-french-telephone-numbers\r\nconst VALIDATION_PHONE = (s: string) =>\r\n\t/^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/.test(s)\r\n\r\nconst field_params = (params: FieldParam = {}) => ({\r\n\trequired: params.required !== undefined ? params.required : true\r\n})\r\n\r\ntype PrimitiveField = {\r\n\ttype: any\r\n\tvalidation?: (s: any) => boolean\r\n\tdefault?: any\r\n} & FieldParam\r\n\r\nexport const text_field = (params: FieldParam = {}): PrimitiveField => ({\r\n\ttype: String,\r\n\r\n\tvalidation:\r\n\t\tparams.validation && typeof params.validation === 'function'\r\n\t\t\t? params.validation\r\n\t\t\t: (s: string) => s.length > 0,\r\n\r\n\tdefault: params.default !== undefined ? params.default : '',\r\n\t...field_params(params)\r\n})\r\n\r\n/**\r\n *\r\n * @param {*} params\r\n */\r\nexport const number_field = (params: FieldParam = {}): PrimitiveField => ({\r\n\ttype: Number,\r\n\tdefault: params.default !== undefined ? params.default : null,\r\n\tvalidation:\r\n\t\tparams.validation && typeof params.validation === 'function'\r\n\t\t\t? params.validation\r\n\t\t\t: (v) => v !== null || v === '',\r\n\t...field_params(params)\r\n})\r\n\r\n/**\r\n *\r\n * @param {{\r\n *   required?: Boolean\r\n * }} params\r\n */\r\nexport const bool_field = (params: FieldParam = {}): PrimitiveField => ({\r\n\ttype: Boolean,\r\n\tdefault: params.default || false,\r\n\tvalidation: (v) => v !== null,\r\n\t...field_params(params)\r\n})\r\n\r\n/**\r\n *\r\n * @param {{\r\n *   required?: Boolean\r\n * }} params\r\n */\r\nexport const mail_field = (params: FieldParam = {}): PrimitiveField => ({\r\n\ttype: String,\r\n\tvalidation: VALIDATION_MAIL,\r\n\tdefault: '',\r\n\t...field_params(params)\r\n})\r\n\r\n/**\r\n *\r\n * @param {{\r\n *   required?: Boolean\r\n * }} params\r\n */\r\nexport const phone_field = (params: FieldParam = {}): PrimitiveField => ({\r\n\ttype: String,\r\n\tvalidation: VALIDATION_PHONE,\r\n\tdefault: '',\r\n\t...field_params(params)\r\n})\r\n\r\ntype CreditCardField = {\r\n\tccnumber: PrimitiveField\r\n\tccdate: PrimitiveField\r\n\tccsecuritycode: PrimitiveField\r\n}\r\n\r\nexport const credit_card_field = (): CreditCardField => ({\r\n\tccnumber: {\r\n\t\ttype: String,\r\n\t\tvalidation: (s: string) => s.length >= 13 && /^[0-9]*$/.test(s)\r\n\t},\r\n\tccdate: {\r\n\t\ttype: String,\r\n\t\tvalidation: (s: string) => {\r\n\t\t\tif (!/^[0-9]{2}\\/[0-9]{4}$/.test(s)) return false\r\n\r\n\t\t\tconst [mm, yyyy] = s.split('/')\r\n\t\t\tconst year = parseInt(yyyy, 10)\r\n\t\t\tconst month = parseInt(mm, 10)\r\n\r\n\t\t\tif (month < 1 || month > 12) return false\r\n\r\n\t\t\tif (\r\n\t\t\t\tyear < new Date().getFullYear() ||\r\n\t\t\t\tyear > new Date().getFullYear() + 50\r\n\t\t\t)\r\n\t\t\t\treturn false\r\n\t\t\tif (\r\n\t\t\t\tyear === new Date().getFullYear() &&\r\n\t\t\t\tmonth < new Date().getMonth() + 1\r\n\t\t\t)\r\n\t\t\t\treturn false\r\n\r\n\t\t\treturn true\r\n\t\t}\r\n\t},\r\n\tccsecuritycode: {\r\n\t\ttype: String,\r\n\t\tvalidation: (s: string) =>\r\n\t\t\ttypeof s === 'string' && s.length === 3 && /^[0-9]{3}$/.test(s)\r\n\t}\r\n})\r\n","/* eslint-disable camelcase */\n/* eslint-disable prettier/prettier */\n\n/*\n * A simple useForm lib based on a form schema.\n * Then fields can be used by getting field with .get() method.\n * @author: anthonyjeamme\n */\n\nimport { useState } from 'react'\n\nexport const STRING_NOT_EMPTY_VALIDATION = (s: string) =>\n\ttypeof s === 'string' && s.length > 0\n\nconst getDefaultOfType = (type: any) => {\n\treturn type === String ? '' : type === Boolean ? false : null\n}\n\nconst getDataFromSchemaAndDefault = (schema: any, defaultValue: any): any => {\n\tif (schema.type) {\n\t\tif (schema.type === Array) {\n\t\t\treturn getDataFromSchemaAndDefault(\n\t\t\t\t{\n\t\t\t\t\ta: schema\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ta: defaultValue\n\t\t\t\t}\n\t\t\t).a\n\t\t}\n\n\t\tconst value =\n\t\t\tdefaultValue && typeof defaultValue !== 'object'\n\t\t\t\t? defaultValue\n\t\t\t\t: schema.default || getDefaultOfType(schema.type)\n\n\t\treturn {\n\t\t\ttype: schema.type,\n\t\t\tvalue,\n\t\t\terror: false,\n\t\t\trequired: schema.required === true,\n\t\t\tvalidation: schema.validation || (() => true)\n\t\t}\n\t}\n\n\tconst _ = {}\n\n\tObject.keys(schema).forEach((key) => {\n\t\tif (!schema[key].type) {\n\t\t\t_[key] = generateDataFromSchema(\n\t\t\t\tschema[key],\n\t\t\t\tdefaultValue && defaultValue[key] && defaultValue[key]\n\t\t\t)\n\t\t} else if (schema[key].type === Array) {\n\t\t\tconst children =\n\t\t\t\tdefaultValue &&\n\t\t\t\tdefaultValue[key] &&\n\t\t\t\tschema[key].children.type &&\n\t\t\t\tschema[key].children.type !== Array\n\t\t\t\t\t? defaultValue[key].map((value: any) => ({\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\ttype: schema[key].children.type,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\trequired: schema[key].children.required === true,\n\t\t\t\t\t\t\tvalidation: schema[key].children.validation || (() => true)\n\t\t\t\t\t  }))\n\t\t\t\t\t: defaultValue &&\n\t\t\t\t\t  defaultValue[key] &&\n\t\t\t\t\t  Array.isArray(defaultValue[key])\n\t\t\t\t\t? defaultValue[key].map((child: any) =>\n\t\t\t\t\t\t\tgetDataFromSchemaAndDefault(schema[key].children, child)\n\t\t\t\t\t  )\n\t\t\t\t\t: (schema[key].default || []).map((child: any) =>\n\t\t\t\t\t\t\tgetDataFromSchemaAndDefault(schema[key].children, child)\n\t\t\t\t\t  ) || []\n\n\t\t\tif (schema[key].min) {\n\t\t\t\tif (children.length < schema[key].min) {\n\t\t\t\t\tconst nChildrenToAdd = schema[key].min - children.length\n\n\t\t\t\t\tfor (let i = 0; i < nChildrenToAdd; i++) {\n\t\t\t\t\t\tchildren.push(getDataFromSchemaAndDefault(schema[key].children, {}))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_[key] = {\n\t\t\t\ttype: Array,\n\t\t\t\tchildren,\n\t\t\t\tchildrenSchema: schema[key].children,\n\t\t\t\tschema: schema[key],\n\t\t\t\treadOnly: schema[key].readOnly,\n\t\t\t\tvalidation: schema[key].validation || (() => true),\n\t\t\t\tmax: schema[key].max || Infinity,\n\t\t\t\tmin: schema[key].min || 0\n\t\t\t}\n\t\t} else {\n\t\t\tconst value =\n\t\t\t\tdefaultValue &&\n\t\t\t\tdefaultValue[key] !== undefined &&\n\t\t\t\ttypeof defaultValue[key] !== 'object'\n\t\t\t\t\t? defaultValue[key]\n\t\t\t\t\t: schema[key].default || getDefaultOfType(schema[key].type)\n\n\t\t\t_[key] = {\n\t\t\t\ttype: schema[key].type,\n\t\t\t\tvalue,\n\t\t\t\terror: false,\n\t\t\t\trequired: schema[key].required === true,\n\t\t\t\tvalidation: schema[key].validation || (() => true)\n\t\t\t}\n\t\t}\n\t})\n\n\tif (defaultValue) {\n\t\tObject.keys(defaultValue).forEach((key) => {\n\t\t\tif (!schema[key]) {\n\t\t\t\t_[key] = {\n\t\t\t\t\ttype: typeof defaultValue[key] === 'object' ? Object : String,\n\t\t\t\t\tvalue: defaultValue[key],\n\t\t\t\t\terror: false,\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalidation: () => true\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\treturn _\n}\n\nconst generateDataFromSchema = (schema: any, defaultValue: any) => {\n\treturn getDataFromSchemaAndDefault(schema, defaultValue)\n}\n\ntype EventName = 'change' | 'submit'\n\ntype FormEvent = Array<{\n\tevent: string\n\tcallback: (e: any) => null\n}>\n/**\n *\n * @param {*} formSchema\n * @param {*} initData\n */\nconst useForm = (formSchema = {}, initData = null) => {\n\tconst [formData, setFormData] = useState(\n\t\tgenerateDataFromSchema(formSchema, initData)\n\t)\n\tconst [modified, setModified] = useState(false)\n\tconst [events, setEvents] = useState<FormEvent>([])\n\n\tconst recursiveGet = (\n\t\tparent: any,\n\t\tpath: string[],\n\t\tupdateFunction: (data: any) => void,\n\t\tpathHistory: string[] = path\n\t): any => {\n\t\tif (path.length === 0) {\n\t\t\tif (parent.type === Array) {\n\t\t\t\treturn {\n\t\t\t\t\terror: parent.error,\n\t\t\t\t\tlength: parent.children.length,\n\t\t\t\t\tmap: (func: (child: any, i: number) => any) => {\n\t\t\t\t\t\treturn parent.children.map((child: any, i: number) => {\n\t\t\t\t\t\t\treturn func(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...recursiveGet(\n\t\t\t\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t\t\t(data: any) => {\n\t\t\t\t\t\t\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t\t\t\t\t\t\t...parent,\n\t\t\t\t\t\t\t\t\t\t\t\tchildren: parent.children.map((c: any, _i: number) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t_i === i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...c,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: c\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tpathHistory\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcanBeRemoved: (): boolean => {\n\t\t\t\t\t\t\t\t\t\tif (parent.min && parent.children.length <= parent.min)\n\t\t\t\t\t\t\t\t\t\t\treturn false\n\n\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tremove: (): any => {\n\t\t\t\t\t\t\t\t\t\tif (parent.readOnly) return false\n\t\t\t\t\t\t\t\t\t\tif (parent.min && parent.children.length <= parent.min) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn('Impossible to delete')\n\t\t\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t\t\t\t\t\t...parent,\n\t\t\t\t\t\t\t\t\t\t\tchildren: parent.children.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t(_: any, _i: number) => i !== _i\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ti\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\ttoJSON: () => recursiveToJSON(parent),\n\t\t\t\t\tset: (data: any) => {\n\t\t\t\t\t\tconst _ = getDataFromSchemaAndDefault(parent.schema, data)\n\t\t\t\t\t\tupdateFunction(_)\n\t\t\t\t\t},\n\t\t\t\t\t// TODO make possibility to get '0.name' ??\n\t\t\t\t\tget: (i: number): any => {\n\t\t\t\t\t\t// return parent.children[i]\n\n\t\t\t\t\t\treturn recursiveGet(\n\t\t\t\t\t\t\tparent.children[i],\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t(data: any) => {\n\t\t\t\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t\t\t\t...parent,\n\t\t\t\t\t\t\t\t\tchildren: parent.children.map((c: any, _i: number) =>\n\t\t\t\t\t\t\t\t\t\t_i === i\n\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...c,\n\t\t\t\t\t\t\t\t\t\t\t\t\t...data\n\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t: c\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpathHistory\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tcanPush: (): boolean => {\n\t\t\t\t\t\tif (parent.readOnly) return false\n\t\t\t\t\t\tif (parent.max && parent.children.length >= parent.max) return false\n\n\t\t\t\t\t\treturn true\n\t\t\t\t\t},\n\t\t\t\t\tpush: (item = null) => {\n\t\t\t\t\t\tif (parent.readOnly) {\n\t\t\t\t\t\t\tconsole.warn(`form field '${pathHistory.join('.')}' is readOnly`)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (parent.children.length >= parent.max) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newField = getDataFromSchemaAndDefault(\n\t\t\t\t\t\t\tparent.childrenSchema,\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t\t...parent,\n\t\t\t\t\t\t\tchildren: [...parent.children, newField]\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tcanRemove: (): boolean => {\n\t\t\t\t\t\tif (parent.readOnly) return false\n\t\t\t\t\t\tif (parent.min && parent.children.length <= parent.min) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true\n\t\t\t\t\t},\n\t\t\t\t\tremove: (i: number) => {\n\t\t\t\t\t\tif (parent.min && parent.children.length <= parent.min) {\n\t\t\t\t\t\t\tconsole.warn('Impossible to delete')\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t\t...parent,\n\t\t\t\t\t\t\tchildren: parent.children.filter((_: any, _i: number) => i !== _i)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (parent.type) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: parent.value,\n\t\t\t\t\tsetValue: (value: any) => {\n\t\t\t\t\t\tupdateFunction({ value, error: null })\n\t\t\t\t\t},\n\t\t\t\t\terror: parent.error\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tget: (name: string) => {\n\t\t\t\t\t\treturn recursiveGet(\n\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\tname.split('.'),\n\t\t\t\t\t\t\t(data: any) => {\n\t\t\t\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t\t\t\t...data\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpathHistory\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\ttoJSON: () => recursiveToJSON(parent)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!parent) {\n\t\t\tconsole.error(`unknown field '${pathHistory.join('.')}'`)\n\t\t\treturn null\n\t\t}\n\n\t\tif (parent.type === Object) {\n\t\t\tlet _v = parent.value\n\n\t\t\tconst key = path[0]\n\t\t\tlet _path = [...path]\n\n\t\t\twhile (_path.length > 0) {\n\t\t\t\tif (typeof _v !== 'object') {\n\t\t\t\t\tconsole.warn(`${path.join('.')} not found`)\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tconst key = _path[0]\n\t\t\t\t_v = _v[key]\n\t\t\t\t_path = _path.slice(1)\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tvalue: _v,\n\t\t\t\tsetValue: (v: any) => {\n\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t...parent,\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t...parent.value,\n\t\t\t\t\t\t\t[key]: v\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: null\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (parent.type === Array) {\n\t\t\tconst [index, key] = path\n\n\t\t\tif (!parent.children[index]) {\n\t\t\t\tconsole.error(`cannot find index ${index} on ${pathHistory.join('.')}`)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\treturn recursiveGet(\n\t\t\t\tparent.children[index][key],\n\t\t\t\tpath.slice(2),\n\t\t\t\t(data: any) => {\n\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t...parent,\n\t\t\t\t\t\tchildren: parent.children.map((c: any, i: number) =>\n\t\t\t\t\t\t\ti === parseInt(index, 10)\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t...c,\n\t\t\t\t\t\t\t\t\t\t[key]: {\n\t\t\t\t\t\t\t\t\t\t\t...c[key],\n\t\t\t\t\t\t\t\t\t\t\t...data\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: c\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tpathHistory\n\t\t\t)\n\t\t} else {\n\t\t\treturn recursiveGet(\n\t\t\t\tparent[path[0]],\n\t\t\t\tpath.slice(1),\n\t\t\t\t(data: any) => {\n\t\t\t\t\tupdateFunction({\n\t\t\t\t\t\t...parent,\n\t\t\t\t\t\t[path[0]]: {\n\t\t\t\t\t\t\t...parent[path[0]],\n\t\t\t\t\t\t\t...data\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tpathHistory\n\t\t\t)\n\t\t}\n\t}\n\n\tconst get = (name: string) => {\n\t\tconst path = name.split('.')\n\n\t\treturn recursiveGet(formData, path, (data: any) => {\n\t\t\tcallEvents('change', recursiveToJSON(data))\n\t\t\tsetModified(true)\n\t\t\tsetFormData({\n\t\t\t\t...formData,\n\t\t\t\t...data\n\t\t\t})\n\t\t})\n\t}\n\n\tconst checkErrors = () => {\n\t\tsetFormData(recursiveUpdateError(formData))\n\t}\n\n\tconst recursiveUpdateError = (data: any) => {\n\t\tif (data.type === Array) {\n\t\t\tconst error =\n\t\t\t\tdata.children.length < data.min || !recursiveErrorCheck(data)\n\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\tchildren: data.children.map(recursiveUpdateError),\n\t\t\t\terror\n\t\t\t}\n\t\t}\n\n\t\tif (data.type) {\n\t\t\tif (data.validation) {\n\t\t\t\tif (!data.required) {\n\t\t\t\t\tif (!data.value)\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\terror: null\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tdata.validation &&\n\t\t\t\t\ttypeof data.validation === 'function' &&\n\t\t\t\t\t!data.validation(data.value)\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\terror: true\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\terror: null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data\n\t\t}\n\n\t\tconst _data: any = {}\n\n\t\tObject.keys(data).forEach((key) => {\n\t\t\t_data[key] = recursiveUpdateError(data[key])\n\t\t})\n\n\t\t_data.__error = !recursiveErrorCheck(data)\n\n\t\treturn _data\n\t}\n\n\tconst recursiveErrorCheck = (data: any): boolean => {\n\t\tif (data.type === Array) {\n\t\t\tif (data.min && data.children.length < data.min) return false\n\n\t\t\tlet isValid = true\n\n\t\t\tdata.children.forEach((child: any) => {\n\t\t\t\tif (!recursiveErrorCheck(child)) {\n\t\t\t\t\tisValid = false\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn isValid\n\t\t}\n\n\t\tif (data.type) {\n\t\t\tif (data.validation) {\n\t\t\t\tif (!data.required && !data.value) return true\n\n\t\t\t\tif (typeof data.validation !== 'function') return true\n\t\t\t\treturn data.validation(data.value)\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\n\t\tlet isValid = true\n\n\t\tObject.keys(data).forEach((key) => {\n\t\t\tif (!recursiveErrorCheck(data[key])) {\n\t\t\t\tisValid = false\n\t\t\t}\n\t\t})\n\n\t\treturn isValid\n\t}\n\n\tconst recursiveToJSON = (data: any): any => {\n\t\tif (data.type === Array) {\n\t\t\treturn data.children.map(recursiveToJSON)\n\t\t}\n\t\tif (data.type) {\n\t\t\treturn data.value\n\t\t}\n\n\t\tconst _data: any = {}\n\n\t\tObject.keys(data).forEach((key) => {\n\t\t\tif (key === '__error') return\n\n\t\t\t_data[key] = recursiveToJSON(data[key])\n\t\t\tif (data[key].___payload) {\n\t\t\t\t_data.payload = data[key].___payload\n\t\t\t}\n\t\t})\n\n\t\treturn _data\n\t}\n\n\tconst toJSON = (): any => {\n\t\treturn recursiveToJSON(formData)\n\t}\n\n\tconst isValid: boolean = recursiveErrorCheck(formData)\n\n\tconst handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\tif (!recursiveErrorCheck(formData)) e.preventDefault()\n\t}\n\n\tconst callEvents = (eventName: EventName, payload: any) => {\n\t\tevents\n\t\t\t.filter((event) => event.event === eventName)\n\t\t\t.forEach((event) => {\n\t\t\t\tevent.callback(payload)\n\t\t\t})\n\t}\n\n\tconst addEventListener = (event: EventName, callback: (e: any) => null) => {\n\t\tif (events.find((e) => e.event === event && e.callback === callback)) return\n\n\t\tsetEvents([\n\t\t\t...events,\n\t\t\t{\n\t\t\t\tevent,\n\t\t\t\tcallback\n\t\t\t}\n\t\t])\n\t}\n\tconst removeEventListener = (\n\t\tevent: EventName,\n\t\tcallback: (e: any) => null\n\t) => {\n\t\tsetEvents(\n\t\t\tevents.filter((e) => {\n\t\t\t\tif (e.event === event && e.callback === callback) return false\n\t\t\t\treturn true\n\t\t\t})\n\t\t)\n\t}\n\n\treturn {\n\t\tisValid,\n\t\tcheckErrors,\n\t\tget,\n\t\ttoJSON,\n\t\thandleSubmit,\n\t\tformData,\n\t\tmodified,\n\t\tsetModified,\n\t\taddEventListener,\n\t\tremoveEventListener\n\t}\n}\n\nexport * from './fields'\nexport default useForm\n","import React, { useState, useEffect } from 'react'\n\nimport styled from \"styled-components\";\n\nimport useForm, {text_field, bool_field} from 'react-super-useform'\n\n\nconst StyledTextarea = \nstyled.textarea`\npadding:20px;\nborder-radius: 6px;\nbackground-color:white;\nborder:0;\nresize:none;\nwidth:100%;\ndisplay:block;\nmargin: 20px 0;\nheight:200px;\noutline:none;\nbox-shadow: 0 0 20px rgba(0,0,0,0.02)\n`;\n\nconst StyledInput = \nstyled.input`\npadding:10px;\nborder-radius: 6px;\nbackground-color:white;\nborder:1px solid #eee;\nbox-shadow: 0 0 20px rgba(0,0,0,0.02);\noutline: none;\n`;\n\nconst StyledButton = \nstyled.button`\npadding:10px;\nborder-radius: 6px;\nbackground-color:#3498db;\nborder:0;\nmargin: 20px 0;\nbox-shadow: 0 0 20px rgba(0,0,0,0.02);\ncursor:pointer;\ncolor:white;\noutline: none;\nmargin:8px 4px;\n\ntransition: background-color 150ms;\n&:active{\n\tbackground-color:#2586c7;\n}\n`;\nconst Container = styled.div`\nwidth: 1000px;\nmax-width:90vw;\nmargin:auto;\n`\nconst Input = ({value, setValue, error, ...props}) => (\n\t<StyledInput style={error ? {\n\t\tborderColor:'red'\n\t} : {}} value={value} onChange={e=>{\n\t\tsetValue(e.target.value)\n\t}} {...props}/>\n)\n\nconst StyledFormGroupLabel = styled.div`\nmargin-bottom:5px;\n`\n\nconst StyledFormGroup = styled.div`\n\nmargin: 10px 0;\n`\n\nconst data = {\n}\n\nconst formSchema = {\n\tmovies:{\n\t\ttype: Array,\n\t\tmin:1,\n\t\tchildren:{\n\t\t\tname: text_field(),\n\t\t\tdate: text_field(),\n\t\t\ttags:{\n\t\t\t\ttype: Array,\n\t\t\t\tmin:2,\n\t\t\t\tchildren: text_field()\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst Hr = () => (\n\t<hr style={{height:1, border:0, backgroundColor:'#ddd', margin: \"20px 0\"}}/>\n)\n\nconst App = () => {\n\n\tconst form = useForm(formSchema,data)\n\n\n\tuseEffect(()=>{\n\n\t\tform.addEventListener('change', e => {\n\n\t\t\tconsole.log('CHANGE',e)\n\t\t})\n\t},[])\n\n\n  return (\n\t<div style={{\n\t\tdisplay:'flex',\n\t\tflexDirection:'column',\n\t\theight:'100vh'\n\t}}>\n\n\t\t<div style={{flex:1, overflowY:'auto'}}>\n\n\t\t\t<Container>\n\n\t\t\t\t<h1>My best movies</h1>\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tform.get('movies').map(movie => (\n\n\n\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\tmargin:'0 0 40px 0',\n\t\t\t\t\t\t\tbackground:\"white\",\n\t\t\t\t\t\t\tpadding:20\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tMovie name<br />\n\t\t\t\t\t\t\t\t<Input {...movie.get('name')} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tMovie date<br />\n\t\t\t\t\t\t\t\t<Input {...movie.get('date')} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t<h2>Tags</h2>\n\n\t\t\t\t\t\t\t\t{movie.get('tags').map(tag => (\n\t\t\t\t\t\t\t\t\t<Input {...tag} />\n\t\t\t\t\t\t\t\t))}\n\n\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<button onClick={()=>(\n\t\t\t\t\t\t\t\t\tmovie.get('tags').push()\n\t\t\t\t\t\t\t\t)}>Add a tag</button>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t))\n\t\t\t\t}\n\n\t\t\t\t<hr />\n\n\t\t\t\t<button onClick={()=>{\n\t\t\t\t\tform.get('movies').push()\n\t\t\t\t}}>Add a movie</button>\n\t\t\n\n\t\t\t</Container>\n\t\t</div>\n\n\t\t<footer style={{\n\t\t\tbackgroundColor:'white',\n\t\t\tboxShadow:'0 0 20px rgba(0,0,0,0.1)'\n\t\t}}>\n\t\t\t<Container>\n\t\t\t\t\n\t\t\t\t<div style={{display:'flex', alignItems:'center'}}>\n\n\t\t\t\t\t<div style={{flex:1}}>\n \n\t\t\t\t\t{\n\t\t\t\t\t\tform.modified ? '✏️':''\n\t\t\t\t\t}\n\n\t\t\t\t\t{\n\t\t\t\t\t\tform.isValid ? '✔️':'❌'\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\n\t\t\t\t\t\t<StyledButton onClick={()=>{\n\t\t\t\t\t\t\tform.checkErrors()\n\t\t\t\t\t\t\t}}>Check Errors</StyledButton>\n\t\t\t\t\n\t\t\t\t\t\t<StyledButton onClick={()=>{\n\t\t\t\t\t\t\t\tconsole.log(form.toJSON())\n\t\t\t\t\t\t\t}}>Export JSON</StyledButton>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\n\t\t\t</Container>\n\t\t</footer>\n\t</div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}